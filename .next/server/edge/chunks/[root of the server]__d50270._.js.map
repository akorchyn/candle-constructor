{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\nimport { NextResponse } from 'next/server'\nimport { getToken } from 'next-auth/jwt'\nimport type { NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n    const path = request.nextUrl.pathname\n\n    // Public paths that don't require authentication\n    const isPublicPath = path === '/login'\n\n    const token = await getToken({\n        req: request,\n        secret: process.env.NEXTAUTH_SECRET,\n    })\n\n    // Redirect to login if not authenticated and trying to access protected route\n    if (!token && !isPublicPath) {\n        return NextResponse.redirect(new URL('/login', request.url))\n    }\n\n\n    // Redirect to home if authenticated and trying to access login\n    if (token && isPublicPath) {\n        return NextResponse.redirect(new URL('/', request.url))\n    }\n\n    return NextResponse.next()\n}\n\n// See \"Matching Paths\" below to learn more\nexport const config = {\n    matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AADA;;;AAIO,eAAe,WAAW,OAAoB;IACjD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,iDAAiD;IACjD,MAAM,eAAe,SAAS;IAE9B,MAAM,QAAQ,MAAM,CAAA,GAAA,4IAAA,CAAA,WAAQ,AAAD,EAAE;QACzB,KAAK;QACL,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACvC;IAEA,8EAA8E;IAC9E,IAAI,CAAC,SAAS,CAAC,cAAc;QACzB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC9D;IAGA,+DAA+D;IAC/D,IAAI,SAAS,cAAc;QACvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACzD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC5B;AAGO,MAAM,SAAS;IAClB,SAAS;QAAC;KAAoD;AAClE"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}