{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/lib/api.ts"],"sourcesContent":["// src/lib/api.ts\nexport async function fetchMaterials() {\n    const response = await fetch('/api/materials')\n    if (!response.ok) throw new Error('Failed to fetch materials')\n    return response.json()\n}\n\nexport async function createMaterial(data: {\n    name: string\n    units: string\n    pricePerUnit: number\n    imageUrl?: string\n}) {\n    const response = await fetch('/api/materials', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to create material')\n    return response.json()\n}\n\nexport async function updateMaterial(id: number, data: {\n    name: string\n    units: string\n    pricePerUnit: number\n    imageUrl?: string\n}) {\n    const response = await fetch(`/api/materials/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to update material')\n    return response.json()\n}\n\nexport async function deleteMaterial(id: number) {\n    const response = await fetch(`/api/materials/${id}`, {\n        method: 'DELETE',\n    })\n    if (!response.ok) throw new Error('Failed to delete material')\n    return response.json()\n}\n\nexport async function fetchCandles() {\n    const response = await fetch('/api/candles')\n    if (!response.ok) throw new Error('Failed to fetch candles')\n    return response.json()\n}\n\nexport async function createCandle(data: {\n    name: string\n    description?: string\n    imageUrl?: string\n    price: number\n    weight: number\n    status?: 'DRAFT' | 'ACTIVE' | 'DISCONTINUED'\n}) {\n    const response = await fetch('/api/candles', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to create candle')\n    return response.json()\n}\n\nexport async function updateCandle(id: number, data: {\n    name: string\n    description?: string\n    imageUrl?: string\n    price: number\n    weight: number\n    status?: 'DRAFT' | 'ACTIVE' | 'DISCONTINUED'\n}) {\n    const response = await fetch(`/api/candles/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to update candle')\n    return response.json()\n}\n\nexport async function deleteCandle(id: number) {\n    const response = await fetch(`/api/candles/${id}`, {\n        method: 'DELETE',\n    })\n    if (!response.ok) throw new Error('Failed to delete candle')\n    return response.json()\n}\n\nexport async function addRecipe(data: {\n    candleId: number\n    materialId: number\n    amountUsed: number\n    notes?: string\n}) {\n    const response = await fetch('/api/recipes', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to add recipe')\n    return response.json()\n}\n\nexport async function updateRecipe(id: number, data: {\n    amountUsed: number\n    notes?: string\n}) {\n    const response = await fetch(`/api/recipes/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to update recipe')\n    return response.json()\n}\n\nexport async function deleteRecipe(id: number) {\n    const response = await fetch(`/api/recipes/${id}`, {\n        method: 'DELETE',\n    })\n    if (!response.ok) throw new Error('Failed to delete recipe')\n    return response.json()\n}\n\nexport async function fetchCategories() {\n    const response = await fetch('/api/categories')\n    if (!response.ok) throw new Error('Failed to fetch categories')\n    return response.json()\n}\n\nexport async function fetchCategory(id: number) {\n    const response = await fetch(`/api/categories/${id}`)\n    if (!response.ok) throw new Error('Failed to fetch category')\n    return response.json()\n}\n\nexport async function createCategory(data: {\n    name: string\n    description?: string\n}) {\n    const response = await fetch('/api/categories', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to create category')\n    return response.json()\n}\n\nexport async function updateCategory(id: number, data: {\n    name: string\n    description?: string\n}) {\n    const response = await fetch(`/api/categories/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    })\n    if (!response.ok) throw new Error('Failed to update category')\n    return response.json()\n}\n\nexport async function deleteCategory(id: number) {\n    const response = await fetch(`/api/categories/${id}`, {\n        method: 'DELETE',\n    })\n    if (!response.ok) throw new Error('Failed to delete category')\n    return response.json()\n}\n\nexport async function fetchCandle(id: number) {\n    const response = await fetch(`/api/candles/${id}`)\n    if (!response.ok) throw new Error('Failed to fetch candle')\n    return response.json()\n}\n\nexport async function updateCandleRecipe(candleId: number, recipe: Array<{\n    materialId: number\n    amountUsed: number\n}>) {\n    const response = await fetch(`/api/candles/${candleId}/recipe`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ recipe }),\n    })\n    if (!response.ok) throw new Error('Failed to update recipe')\n    return response.json()\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/app/candles/%5Bid%5D/recipe/page.tsx"],"sourcesContent":["// src/app/candles/[id]/recipe/page.tsx\n'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { fetchCandle, fetchMaterials, updateCandleRecipe } from '@/lib/api'\nimport { useParams, useRouter } from 'next/navigation'\n\ninterface Material {\n    id: number\n    name: string\n    units: string\n    pricePerUnit: number\n    categoryId: number\n}\n\ninterface RecipeItem {\n    materialId: number\n    amountUsed: number\n}\n\ninterface Category {\n    id: number\n    name: string\n    materials: Material[]\n}\n\nexport default function RecipePage() {\n    const params = useParams()\n    const router = useRouter()\n    const queryClient = useQueryClient()\n    const [recipe, setRecipe] = useState<RecipeItem[]>([])\n\n    const { data: candle, isLoading: isLoadingCandle } = useQuery({\n        queryKey: ['candle', params.id],\n        queryFn: () => fetchCandle(Number(params.id))\n    })\n\n    // Initialize recipe state with existing data\n    useEffect(() => {\n        if (candle?.recipes) {\n            setRecipe(\n                candle.recipes.map(recipe => ({\n                    materialId: recipe.materialId,\n                    amountUsed: recipe.amountUsed\n                }))\n            )\n        }\n    }, [candle])\n\n    const { data: materials, isLoading: isLoadingMaterials } = useQuery({\n        queryKey: ['materials'],\n        queryFn: fetchMaterials\n    })\n\n    const updateMutation = useMutation({\n        mutationFn: (data: RecipeItem[]) =>\n            updateCandleRecipe(Number(params.id), data),\n        onSuccess: () => {\n            queryClient.invalidateQueries({ queryKey: ['candle', params.id] })\n            router.push('/candles')\n        }\n    })\n\n    const materialsByCategory = materials?.reduce((acc, material) => {\n        if (!acc[material.categoryId]) {\n            acc[material.categoryId] = []\n        }\n        acc[material.categoryId].push(material)\n        return acc\n    }, {} as Record<number, Material[]>) || {}\n\n    const handleAmountChange = (materialId: number, amount: number) => {\n        setRecipe(prev => {\n            const existing = prev.find(item => item.materialId === materialId)\n            if (existing) {\n                return prev.map(item =>\n                    item.materialId === materialId ? { ...item, amountUsed: amount } : item\n                )\n            }\n            return [...prev, { materialId, amountUsed: amount }]\n        })\n    }\n\n    const handleSubmit = async () => {\n        await updateMutation.mutateAsync(recipe)\n    }\n\n    if (isLoadingCandle || isLoadingMaterials) {\n        return <div className=\"text-center p-6\">Loading...</div>\n    }\n\n    if (!candle) {\n        return <div className=\"text-center p-6 text-red-500\">Candle not found</div>\n    }\n\n    return (\n        <div>\n            <div className=\"mb-6 flex justify-between items-center\">\n                <div>\n                    <h1 className=\"text-2xl font-semibold text-gray-900\">\n                        Recipe for {candle.name}\n                    </h1>\n                    <p className=\"text-sm text-gray-500 mt-1\">\n                        Add materials and specify quantities\n                    </p>\n                </div>\n                <div className=\"flex gap-2\">\n                    <Button variant=\"outline\" onClick={() => router.back()}>\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={handleSubmit}\n                        disabled={updateMutation.isPending}\n                    >\n                        {updateMutation.isPending ? 'Saving...' : 'Save Recipe'}\n                    </Button>\n                </div>\n            </div>\n\n            <div className=\"space-y-8\">\n                {Object.entries(materialsByCategory).map(([categoryId, categoryMaterials]) => (\n                    <div key={categoryId} className=\"space-y-4\">\n                        <div className=\"border-b pb-2\">\n                            <h2 className=\"text-xl font-medium text-gray-900\">\n                                {materials?.find(m => m.categoryId === Number(categoryId))?.category?.name}\n                            </h2>\n                        </div>\n\n                        <div className=\"bg-white shadow rounded-lg divide-y divide-gray-200\">\n                            {categoryMaterials.map((material) => {\n                                const recipeItem = recipe.find(r => r.materialId === material.id)\n                                return (\n                                    <div key={material.id} className=\"p-4 flex items-center justify-between\">\n                                        <div>\n                                            <h3 className=\"font-medium\">{material.name}</h3>\n                                            <p className=\"text-sm text-gray-500\">\n                                                ${material.pricePerUnit} per {material.units}\n                                            </p>\n                                        </div>\n                                        <div className=\"flex items-center gap-2\">\n                                            <Input\n                                                type=\"number\"\n                                                min=\"0\"\n                                                className=\"w-24\"\n                                                placeholder={`${material.units}`}\n                                                value={recipeItem?.amountUsed || ''}\n                                                onChange={(e) => handleAmountChange(material.id, Number(e.target.value))}\n                                            />\n                                            <span className=\"text-sm text-gray-500 min-w-16\">\n                                                {material.units}\n                                            </span>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}