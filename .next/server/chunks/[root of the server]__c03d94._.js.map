{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/lib/db.ts"],"sourcesContent":["// src/lib/db.ts\nimport { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient }\n\nexport const prisma =\n    globalForPrisma.prisma ||\n    new PrismaClient({\n        log: ['query'],\n    })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACT,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACb,KAAK;QAAC;KAAQ;AAClB;AAEJ,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/yurtur/projects/candle-constructor/src/app/api/categories/%5Bid%5D/route.ts"],"sourcesContent":["import { prisma } from '@/lib/db'\nimport { NextResponse } from 'next/server'\n\nexport async function GET(request: Request, props: { params: Promise<{ id: string }> }) {\n    const params = await props.params;\n    try {\n        const category = await prisma.category.findUnique({\n            where: { id: parseInt(params.id) },\n            include: {\n                materials: true\n            }\n        })\n        if (!category) {\n            return NextResponse.json({ error: 'Category not found' }, { status: 404 })\n        }\n        return NextResponse.json(category)\n    } catch (error) {\n        return NextResponse.json({ error: 'Error fetching category' }, { status: 500 })\n    }\n}\n\nexport async function PUT(request: Request, props: { params: Promise<{ id: string }> }) {\n    const params = await props.params;\n    try {\n        const json = await request.json()\n        const category = await prisma.category.update({\n            where: { id: parseInt(params.id) },\n            data: {\n                name: json.name,\n                description: json.description,\n            }\n        })\n        return NextResponse.json(category)\n    } catch (error) {\n        return NextResponse.json({ error: 'Error updating category' }, { status: 500 })\n    }\n}\n\nexport async function DELETE(request: Request, props: { params: Promise<{ id: string }> }) {\n    const params = await props.params;\n    try {\n        // Check if category has any materials\n        const category = await prisma.category.findUnique({\n            where: { id: parseInt(params.id) },\n            include: {\n                materials: true\n            }\n        })\n\n        console.log('Category:', category)\n\n        if (category?.materials.length) {\n            return NextResponse.json(\n                { error: 'Cannot delete category with existing materials' },\n                { status: 400 }\n            )\n        }\n\n        await prisma.category.delete({\n            where: { id: parseInt(params.id) },\n        })\n        return NextResponse.json({ message: 'Category deleted' })\n    } catch (error) {\n        console.error('Error deleting category:', error)\n        return NextResponse.json({ error: 'Error deleting category' }, { status: 500 })\n    }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB,EAAE,KAA0C;IAClF,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,IAAI;QACA,MAAM,WAAW,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC9C,OAAO;gBAAE,IAAI,SAAS,OAAO,EAAE;YAAE;YACjC,SAAS;gBACL,WAAW;YACf;QACJ;QACA,IAAI,CAAC,UAAU;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACJ;AAEO,eAAe,IAAI,OAAgB,EAAE,KAA0C;IAClF,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,IAAI;QACA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,WAAW,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC1C,OAAO;gBAAE,IAAI,SAAS,OAAO,EAAE;YAAE;YACjC,MAAM;gBACF,MAAM,KAAK,IAAI;gBACf,aAAa,KAAK,WAAW;YACjC;QACJ;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACJ;AAEO,eAAe,OAAO,OAAgB,EAAE,KAA0C;IACrF,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,IAAI;QACA,sCAAsC;QACtC,MAAM,WAAW,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC9C,OAAO;gBAAE,IAAI,SAAS,OAAO,EAAE;YAAE;YACjC,SAAS;gBACL,WAAW;YACf;QACJ;QAEA,QAAQ,GAAG,CAAC,aAAa;QAEzB,IAAI,UAAU,UAAU,QAAQ;YAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;gBAAE,OAAO;YAAiD,GAC1D;gBAAE,QAAQ;YAAI;QAEtB;QAEA,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YACzB,OAAO;gBAAE,IAAI,SAAS,OAAO,EAAE;YAAE;QACrC;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmB;IAC3D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACJ"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}